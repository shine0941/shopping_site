name: Docker Compose CI

on:
  push:
    branches: ['develop', 'main']
  pull_request:
    branches: ['develop', 'main']

jobs:
  backend-tests:
    runs-on: ubuntu-latest

    # services:
    #   postgres:
    #     image: postgres:14
    #     env:
    #       DB_HOST: postgres
    #       POSTGRES_USER: tesddbusr
    #       POSTGRES_PASSWORD: tesddbpwd
    #       POSTGRES_DB: shopping_site
    #     ports: []
    #     options: >-
    #       --health-cmd="pg_isready -U tesddbusr"
    #       --health-interval=10s
    #       --health-timeout=5s
    #       --health-retries=5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Compose
        run: docker compose version

      - name: Build and run tests
        run: docker compose -f docker-compose.test.yml up --build --abort-on-container-exit

      - name: Cleanup
        if: always()
        run: docker compose -f docker-compose.test.yml down -v

  # docker-build:
  #   runs-on: ubuntu-latest
  #   needs: build-test
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Build Docker image
  #       run: docker build -t myapp:${{ github.sha }} .
