name: Local Docker CI/CD

on:
  push:
    branches: ['develop', 'main']
  pull_request:
    branches: ['develop', 'main']

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          DB_HOST: postgres
          POSTGRES_USER: tesddbusr
          POSTGRES_PASSWORD: tesddbpwd
          DB_NAME: shopping_site
        ports: []
        options: >-
          --health-cmd="pg_isready -U tesddbusr"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      # - name: Wait for Postgres
      #   run: |
      #     until pg_isready -h postgres -U tesddbusr; do
      #       echo "Waiting for postgres..."
      #       sleep 2
      #     done

      - name: Run migrations
        env:
          # DB_HOST: postgres
          # POSTGRES_USER: tesddbusr
          # POSTGRES_PASSWORD: tesddbpwd
          # DB_NAME: shopping_site
          DATABASE_URL: postgres://tesddbusr:tesddbpwd@postgres:5432/shopping_site
        run: python manage.py migrate

      - name: Run tests
        env:
          # DB_HOST: postgres
          # POSTGRES_USER: tesddbusr
          # POSTGRES_PASSWORD: tesddbpwd
          # DB_NAME: shopping_site
          DATABASE_URL: postgres://tesddbusr:tesddbpwd@postgres:5432/shopping_site
        run: pytest

  # docker-build:
  #   runs-on: ubuntu-latest
  #   needs: build-test
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Build Docker image
  #       run: docker build -t myapp:${{ github.sha }} .
